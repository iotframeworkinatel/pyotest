import paramiko
import logging
from utils.default_data import COMMON_CREDENTIALS
import logging

def test_ssh_weak_auth(ip_address, port=22, timeout=0.1, args=None):
    if args.verbose:
        logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
    else:
        logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
    for user, password in COMMON_CREDENTIALS:
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        logging.debug(f"Attempting SSH login to {ip_address}:{port} with {user}/{password}")
        try:
            ssh_client.connect(
                hostname=ip_address,
                port=port,
                username=user,
                password=password,
                timeout=timeout
            )
            logging.debug(f"Successful SSH login to {ip_address} with {user}/{password}")
            ssh_client.close()
            return True

        except Exception as e:
            logging.error(f"Unexpected error during SSH attempt to {ip_address} with {user}/{password}: {e}")
            if ssh_client:
                ssh_client.close()
    return False