import paramiko
import logging
import socket

COMMON_CREDENTIALS = [
    ('root', 'root'),
    ('root', 'admin'),
    ('root', 'password'),
    ('root', '12345'),
    ('admin', 'admin'),
    ('admin', 'password'),
    ('admin', ''),
    ('user', 'user'),
    ('test', 'test'),
]

def test_ssh_weak_auth(ip_address, port=22, timeout=1):
    for user, password in COMMON_CREDENTIALS:
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        print(f"Attempting SSH login to {ip_address}:{port} with {user}/{password}")
        try:
            ssh_client.connect(
                hostname=ip_address,
                port=port,
                username=user,
                password=password,
                timeout=timeout
            )
            logging.warning(f"Successful SSH login to {ip_address} with {user}/{password}")
            ssh_client.close()
            return True

        except Exception as e:
            print(f"Unexpected error during SSH attempt to {ip_address} with {user}/{password}: {e}")
            if ssh_client:
                ssh_client.close()
        finally:
            if ssh_client:
                ssh_client.close()
    return False